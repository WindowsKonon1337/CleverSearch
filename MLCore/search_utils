import numpy as np
from pandas import DataFrame
from pymongo import MongoClient
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.metrics.pairwise import cosine_similarity


def search(uuid, doctype, search_query, number_of_results=5):
    client = MongoClient('mongodb://localhost:27018/')
    db = client["'CleverSearch'"]
    files = db.files

    query = {
        '$and': [
            {'uuid': uuid},
            {'type': doctype}
        ]
    }

    cursor = files.find(query)

    list_cur = list(cursor)
    df = DataFrame(list_cur)

    txt_list = list(df.text)
    txt_list.append(search_query)

    vectorizer = TfidfVectorizer()
    X = vectorizer.fit_transform(txt_list).todense()

    cosine = [cosine_similarity(
        np.array(vec), np.array(X[-1])
        ) for vec in X[:-1]]

    tmp_dict = {index: value for index, value in enumerate(cosine)}
    sorted_dict = dict(sorted(
        tmp_dict.items(), key=lambda item: item[1], reverse=True
        ))

    keys = list(sorted_dict.keys())[:number_of_results]

    return df.iloc[keys]

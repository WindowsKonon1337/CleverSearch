name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - 'dev*'
      - 'deploy_BACK-CLEVER-13'

jobs:
  print_info:
    name: Print Run Information
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
          uses: actions/checkout@v2
          
      - name: Print Default Info
        run: |
          echo "GitHub Action initiated by: ${{ github.actor }}"
          echo "Repository: ${{ github.repository }}"
          echo "Branch: ${{ github.ref }}"
          echo "From: ${{ github.head_ref }}"
          echo "Event name: ${{ github.event_name }}"
          echo "Run ID: ${{ github.run_id }}"
        
      - name: Get latest commit message
        id: commit_message
        run: |
          COMMIT_MESSAGE=$(git log --format=%B -n 1 ${{ github.sha }})
          echo "::set-output name=commit_message::$COMMIT_MESSAGE"

  build_backend:
    needs: [print_info]
    if: contains(needs.print_info.outputs.commit_message, 'BACK-CLEVER')
    name: Build and Push Backend Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_ACCESS_TOKEN }}" | docker login --username windowskonon1337 --password-stdin
      - name: Build backend image
        run: docker build -t windowskonon1337/cleversearch_backend:latest ./backend
      - name: Push backend image to Docker Hub
        run: docker push windowskonon1337/cleversearch_backend:latest

  build_mlcore:
    needs: [print_info]
    if: contains(needs.print_info.outputs.commit_message, 'ML-CLEVER')
    name: Build and Push MLCore Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_ACCESS_TOKEN }}" | docker login --username windowskonon1337 --password-stdin
      - name: Build mlcore image
        run: docker build -t windowskonon1337/cleversearch_mlcore:latest ./MLCore
      - name: Push mlcore image to Docker Hub
        run: docker push windowskonon1337/cleversearch_mlcore:latest

  build_frontend:
    needs: [print_info]
    if: contains(needs.print_info.outputs.commit_message, 'FRONT-CLEVER')
    name: Build and Push Frontend Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_ACCESS_TOKEN }}" | docker login --username windowskonon1337 --password-stdin
      - name: Build frontend image
        run: docker build -t windowskonon1337/cleversearch_frontend:latest ./frontend
      - name: Push frontend image to Docker Hub
        run: docker push windowskonon1337/cleversearch_frontend:latest

  deploy:
    name: Deploy on Server
    needs: [build_backend, build_mlcore, build_frontend,print_info]
    runs-on: ubuntu-latest
    if: ${{ always() }} && ${{ success() }}
    steps:
      - name: SSH and Restart Docker Compose
        uses: appleboy/ssh-action@master
        with:
          host: 89.208.208.128
          username: ubuntu
          key: ${{ secrets.SSH_SERVER_KEY }}
          script: |
            cd ~/clever
            docker compose down
            docker compose pull
            docker compose up -d
